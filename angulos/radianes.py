from manim import *
import numpy as np

class QueEsUnRadian(Scene):
    def construct(self):
        cir = Circle(radius=3, stroke_width=10).set_color(RED)
        radio1 = Line(start=3*RIGHT, end=ORIGIN, stroke_width=15).set_color(YELLOW)
        radio2 = Line(start=3*RIGHT, end=ORIGIN, stroke_width=15).set_color(YELLOW)
        radio3 = Line(start=3*RIGHT, end=ORIGIN, stroke_width=15).set_color(YELLOW)
        radian_arc1 = Arc(radius=3, start_angle=0, angle=TAU/(2*PI), stroke_width=15).set_color(YELLOW)
        radian_arc2 = radian_arc1.copy().rotate(TAU/(2*PI), about_point=ORIGIN).set_color(GREEN)
        radian_arc3 = radian_arc1.copy().rotate(2*TAU/(2*PI), about_point=ORIGIN).set_color(YELLOW)
        radian_angle1 = Arc(radius=1.5, start_angle=0, angle=TAU/(2*PI), stroke_width=300).set_color(RED)
        radian_angle2 = radian_angle1.copy().rotate(TAU/(2*PI), about_point=ORIGIN).set_color(ORANGE)
        radian_angle3 = radian_angle1.copy().rotate(2*TAU/(2*PI), about_point=ORIGIN).set_color(RED)
        radian_angle_mark1 = Arc(radius=1.5, start_angle=0, angle=TAU/(2*PI), stroke_width=10).set_color(YELLOW)
        radian_angle_mark2 = radian_angle_mark1.copy().rotate(TAU/(2*PI), about_point=ORIGIN)
        radian_angle_mark3 = radian_angle_mark1.copy().rotate(2*TAU/(2*PI), about_point=ORIGIN).set_color(BLUE)
        
        self.play(Create(cir))

        self.play(Create(radio1))
        self.play(Transform(radio1, radian_arc1), run_time=4)
        self.play(FadeIn(radian_angle1))
        self.play(Create(radian_angle_mark1))
        t_1rad1 = MathTex("1\ rad").scale(0.8).shift(0.8*RIGHT+0.5*UP).rotate(TAU/(6*PI)).set_color(BLACK)
        self.play(Write(t_1rad1))
        self.wait(1)
        self.play(Create(radio2))
        self.play(Transform(radio2, radian_arc2), run_time=4)
        self.play(FadeIn(radian_angle2))
        self.play(Create(radian_angle_mark2))
        t_1rad2 = MathTex("1\ rad").scale(0.8).shift(0.9*UP).rotate(4*TAU/(6*PI)).set_color(BLACK)
        self.play(Write(t_1rad2))
        
        self.wait(1)
        self.play(Create(radio3))
        self.play(Transform(radio3, radian_arc3), run_time=4)
        self.play(FadeIn(radian_angle3))
        self.play(Create(radian_angle_mark3))
        t_1rad3 = MathTex("1\ rad").scale(0.8).shift(0.9*LEFT+0.5*UP).rotate(8*TAU/(6*PI)).set_color(BLACK)
        self.play(Write(t_1rad3))
        self.wait(1)

        radian_residual = Arc(radius=1.5, start_angle=0, angle=0.1416*TAU/(2*PI), stroke_width=300).set_color(BLUE)
        radian_residual.rotate(3*TAU/(2*PI), about_point=ORIGIN)
        self.play(FadeIn(radian_residual))
        t_residual = MathTex("0.1416\ rad").scale(0.8).shift(2*LEFT+0.2*UP).set_color(BLACK)
        self.play(FadeIn(t_residual))
        
        self.wait(1)

        t_conclu = MathTex("1 + 1 + 1 + 0.1416\ rad = 3.1416 \ rad = \pi \ rad").to_edge(UL)
        self.play(Write(t_conclu))
        T_conclu = MathTex('180^{\circ} = \pi\ rad').scale(1.8).shift(DOWN).set_color(YELLOW)
        self.play(Write(T_conclu))
        self.wait(1)
        C_conclu = MathTex('360^{\circ} = 2\pi\ rad').scale(1.8).to_edge(DL).set_color(YELLOW)
        self.play(Write(C_conclu))

        self.wait(1)

class ConversionesNotables(Scene):
    def construct(self):
        cir = Circle(radius=3, stroke_width=10).set_color(RED)
        r1 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        r2 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        angulo180 = Arc(radius=3, start_angle=0, angle=TAU/2, stroke_width=10).set_color(YELLOW)
        self.play(Create(cir))
        self.play(FadeIn(r1), FadeIn(r2))
        self.play(Create(angulo180), r2.animate.rotate(180*DEGREES, about_point=ORIGIN), run_time=3)
        r_div = Line(ORIGIN, 3*UP,stroke_width=10).set_color(GREEN)
        self.play(Create(r_div))
        t_90r = MathTex("90^{\circ}").scale(2).shift(1.2*RIGHT+1.2*UP)
        t_90l = MathTex("90^{\circ}").scale(2).shift(1.2*LEFT+1.2*UP)
        t_pi_mediosR = MathTex("\\frac{\pi}{2}").scale(2).shift(1.2*RIGHT+1.2*UP)
        t_pi_mediosL = MathTex("\\frac{\pi}{2}").scale(2).shift(1.2*LEFT+1.2*UP)
        self.play(Write(t_90l), Write(t_90r))
        self.wait(2)
        self.play(Transform(t_90l, t_pi_mediosL), Transform(t_90r, t_pi_mediosR), run_time=2)
        self.wait(1)

        todo = VGroup(*[cir, r1, r2, angulo180, r_div, t_90l, t_90r, t_pi_mediosL, t_pi_mediosR])
        self.play(FadeOut(todo))
        self.wait(1)

        cir = Circle(radius=3, stroke_width=10).set_color(RED)
        r1 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        r2 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        angulo180 = Arc(radius=3, start_angle=0, angle=TAU/2, stroke_width=10).set_color(YELLOW)
        self.play(Create(cir))
        self.play(FadeIn(r1), FadeIn(r2))
        self.play(Create(angulo180), r2.animate.rotate(180*DEGREES, about_point=ORIGIN), run_time=3)
        r_div1 = Line(ORIGIN, 3*(np.sqrt(3)/2)*UP+3*0.5*RIGHT,stroke_width=10).set_color(GREEN)
        r_div2 = Line(ORIGIN, 3*(np.sqrt(3)/2)*UP+3*0.5*LEFT,stroke_width=10).set_color(GREEN)
        self.play(Create(r_div1), Create(r_div2))
        t_60r = MathTex("60^{\circ}").scale(2).shift(1.4*RIGHT+UP)
        t_60c = MathTex("60^{\circ}").scale(2).shift(1.2*UP)
        t_60l = MathTex("60^{\circ}").scale(2).shift(1.4*LEFT+UP)
        t_pi_terciosR = MathTex("\\frac{\pi}{3}").scale(2).shift(1.4*RIGHT+UP)
        t_pi_terciosC = MathTex("\\frac{\pi}{3}").scale(2).shift(1.2*UP)
        t_pi_terciosL = MathTex("\\frac{\pi}{3}").scale(2).shift(1.4*LEFT+UP)
        self.play(Write(t_60l), Write(t_60c), Write(t_60r))
        self.wait(2)
        self.play(Transform(t_60l, t_pi_terciosL),
                   Transform(t_60r, t_pi_terciosR), 
                   Transform(t_60c, t_pi_terciosC),
                   run_time=2)
        self.wait(1)
        todo = VGroup(*[cir, r1, r2, angulo180, r_div1, r_div2, t_60c, t_60l, t_60r, t_pi_terciosC, t_pi_terciosL, t_pi_terciosR])
        self.play(FadeOut(todo))
        self.wait(1)

        cir = Circle(radius=3, stroke_width=10).set_color(RED)
        r1 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        r2 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        angulo180 = Arc(radius=3, start_angle=0, angle=TAU/2, stroke_width=10).set_color(YELLOW)
        self.play(Create(cir))
        self.play(FadeIn(r1), FadeIn(r2))
        self.play(Create(angulo180), r2.animate.rotate(180*DEGREES, about_point=ORIGIN), run_time=3)
        r_div1 = Line(ORIGIN, 3*(np.sqrt(2)/2)*UP+3*(np.sqrt(2)/2)*RIGHT,stroke_width=10).set_color(GREEN)
        r_div2 = Line(ORIGIN, 3*UP,stroke_width=10).set_color(GREEN)
        r_div3 = Line(ORIGIN, 3*(np.sqrt(2)/2)*UP+3*(np.sqrt(2)/2)*LEFT,stroke_width=10).set_color(GREEN)
        self.play(Create(r_div1), Create(r_div2), Create(r_div3))
        t_45r = MathTex("45^{\circ}").scale(1.5).shift(1.6*RIGHT+UP)
        t_45c1 = MathTex("45^{\circ}").scale(1.5).shift(0.8*RIGHT+1.5*UP)
        t_45c2 = MathTex("45^{\circ}").scale(1.5).shift(0.8*LEFT+1.5*UP)
        t_45l = MathTex("45^{\circ}").scale(1.5).shift(1.6*LEFT+UP)
        t_pi_cuartosR = MathTex("\\frac{\pi}{4}").scale(1.5).shift(1.6*RIGHT+UP)
        t_pi_cuartosC1 = MathTex("\\frac{\pi}{4}").scale(1.5).shift(0.8*RIGHT+1.5*UP)
        t_pi_cuartosC2 = MathTex("\\frac{\pi}{4}").scale(1.5).shift(0.8*LEFT+1.5*UP)
        t_pi_cuartosL = MathTex("\\frac{\pi}{4}").scale(1.5).shift(1.6*LEFT+UP)
        self.play(Write(t_45r), Write(t_45c1), Write(t_45c2), Write(t_45l))
        self.wait(2)
        self.play(Transform(t_45l, t_pi_cuartosL),
                  Transform(t_45r, t_pi_cuartosR),
                  Transform(t_45c1, t_pi_cuartosC1),
                  Transform(t_45c2, t_pi_cuartosC2),
                   run_time=2)
        self.wait(1)

        todo = VGroup(*[cir, r1, r2, angulo180, r_div1, r_div2, r_div3, 
                        t_45r, t_45l, t_45c1, t_45c2, t_pi_cuartosR, t_pi_cuartosL, t_pi_cuartosC1, t_pi_cuartosC2])
        
        self.play(FadeOut(todo))
        self.wait(1)

        cir = Circle(radius=3, stroke_width=10).set_color(RED)
        r1 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        r2 = Line(3*RIGHT, ORIGIN, stroke_width=10).set_color(YELLOW)
        angulo180 = Arc(radius=3, start_angle=0, angle=TAU/2, stroke_width=10).set_color(YELLOW)
        self.play(Create(cir))
        self.play(FadeIn(r1), FadeIn(r2))
        self.play(Create(angulo180), r2.animate.rotate(180*DEGREES, about_point=ORIGIN), run_time=3)
        r_div1 = Line(ORIGIN, 3*(np.sqrt(3)/2)*RIGHT+3*0.5*UP,stroke_width=10).set_color(GREEN)
        r_div2 = Line(ORIGIN, 3*0.5*RIGHT+3*(np.sqrt(3)/2)*UP,stroke_width=10).set_color(GREEN)
        r_div3 = Line(ORIGIN, 3*UP, stroke_width=10).set_color(GREEN)
        r_div4 = Line(ORIGIN, 3*0.5*LEFT+3*(np.sqrt(3)/2)*UP,stroke_width=10).set_color(GREEN)
        r_div5 = Line(ORIGIN, 3*(np.sqrt(3)/2)*LEFT+3*0.5*UP,stroke_width=10).set_color(GREEN)

        self.play(Create(r_div1), Create(r_div2), Create(r_div3), Create(r_div4), Create(r_div5))
        t_30 = MathTex("30^{\circ}").shift(2*RIGHT+0.5*UP)
        t_pi_sextos = MathTex("\\frac{\pi}{6}").shift(2*RIGHT+0.5*UP)
        self.play(Write(t_30))
        self.play(Transform(t_30, t_pi_sextos))
        self.wait(1)